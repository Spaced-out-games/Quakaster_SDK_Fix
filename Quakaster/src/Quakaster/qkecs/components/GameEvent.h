#pragma once
#include <stdint.h>

namespace qk
{

	/// <summary>
	/// Represents a game command. Feel free to add to it as you wish
	/// </summary>
	enum EGameEventCommand_t : uint16_t
	{
		NONE,
		MOVE,
		ROTATE,
		FIRE_WEAPON,
		SWITCH_WEAPON,
		INTERACT,
		CROUTCH
		// Add additional commands hereafter
	};


	/// <summary>
	/// Represents a simple Game event. Canonically generated by a CController and stored in a CGameEventQueue
	/// </summary>
	/// 
	template <typename GameEventCommand_t>
	struct GameEvent_t
	{

		static_assert(sizeof(GameEventCommand_t) == 2, "Custom game events must be two bytes big!");

		// The command that a CController or similiar takes in to change the state of its neighboring components
		GameEventCommand_t command_ID;

		union
		{
			// If not for mouse deltas and similiar, acts as a payload for additional state (eg, FIRE_WEAPON SECONDARY, SWITCH_WEAPON 5)
			uint8_t payload[6];
			struct
			{
				// X-axis delta
				uint16_t delta_x;

				// Y-axis delta
				uint16_t delta_y;

				// Z-axis delta
				uint16_t delta_z;
			};
		};

	};

	using GameEvent = GameEvent_t<EGameEventCommand_t>;

}